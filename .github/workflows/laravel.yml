name: Laravel

on:
  push:
    branches:
      - master  # Run tests automatically on push to main
  workflow_dispatch:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: secret_lab_test
        options: --health-cmd="mysqladmin ping --silent" --health-timeout=30s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'

    - name: Copy .env file
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Dump Autoload
      run: composer dump-autoload --optimize

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Set up .env file for MySQL
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=secret_lab_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=secret" >> .env

    - name: Wait for MySQL to be ready
      run: |
        until mysql -h 127.0.0.1 -u root -psecret -e "show databases"; do
          echo "Waiting for MySQL to be ready..."
          sleep 5
        done

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Run Tests with Coverage
      env:
        XDEBUG_MODE: coverage
        DB_CONNECTION: mysql
        DB_DATABASE: secret_lab_test
        DB_HOST: 127.0.0.1
        DB_USERNAME: root
        DB_PASSWORD: secret
      run: |
        # Enable Xdebug for code coverage
        export XDEBUG_MODE=coverage
        php artisan test --coverage-html coverage-report

    - name: Upload Coverage Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage-report

  deploy:
    runs-on: ubuntu-latest
    needs: laravel-tests  # Ensure tests pass before deployment
    if: needs.laravel-tests.result == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: SSH into remote server
        run: |
          sshpass -p ${{ secrets.SSH_PASSPHRASE }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Any command you want to run remotely
          echo "Connected successfully"
          sudo cp -rf /var/www/release/current /var/www/release/backup/$(date +\%Y\%m\%d\%H\%M\%S)
          cd /var/www/laravel
          sudo git stash
          sudo git pull origin master  # Pull latest changes from the main branch
          composer install --no-dev --optimize-autoloader  # Install production dependencies
          sudo php artisan migrate --force  # Run database migrations
          php artisan config:cache  # Cache the configuration
          php artisan route:cache  # Cache routes
          php artisan view:cache  # Cache views
          sudo systemctl restart nginx # Reload server (if using Apache) or reload nginx, etc.
          EOF


    
